

#Область ПрограммныйИнтерфейс

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекДата = ТекущаяДатаСеанса();
	
	ОсновнаяТаблицаЗапроса 	= ТаблицаДанных();
		
	СхемаКомпоновкиДанных 		= ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");	
	Настройки 					= КомпоновщикНастроек.ПолучитьНастройки(); 
	
	ДанныеРасшифровки 			= Новый ДанныеРасшифровкиКомпоновкиДанных; 
	КомпоновщикМакета 			= Новый КомпоновщикМакетаКомпоновкиДанных;	
	МакетКомпоновки 			= КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);	
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ДанныеОтчета", 	ОсновнаяТаблицаЗапроса);
	
	ПроцессорКомпоновкиДанных 	= Новый ПроцессорКомпоновкиДанных; 
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки); 
	
	ДокументРезультат.Очистить(); 
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент; 
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат); 
		
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
		
	ДокументРезультат.ПоказатьУровеньГруппировокСтрок(1);
	
	КонечнаяДата = ТекущаяДатаСеанса();
	
	ВремяВыполения = КонечнаяДата - ТекДата;
	ВремяВыполненияСтрокой = Строка(ВремяВыполения);
	ВремяОтчета = СтрШаблон(Нстр("ru = 'Отчет построен за' %1" ), ВремяВыполненияСтрокой);

КонецПроцедуры

#КонецОбласти



#Область СлужебныеПроцедурыИФункции


Функция ТаблицаДанных()
	
	
	ТаблицаРезультат = Новый ТаблицаЗначений;
	
	ТаблицаРезультат.Колонки.Добавить("Номенклатура");
	ТаблицаРезультат.Колонки.Добавить("Дата");
	ТаблицаРезультат.Колонки.Добавить("Цена");
	
	Запрос = Новый Запрос();
	
	Если СокрЛП(Номенклатура) = "" Тогда
		Запрос.УстановитьПараметр("ВыбНом", ЛОЖЬ);
    Иначе
		Запрос.УстановитьПараметр("ВыбНом", ИСТИНА);
    КонецЕсли;	
	
	Запрос.УстановитьПараметр("ВыбНоменклатура", Номенклатура);
	Запрос.УстановитьПараметр("ВидЦены", ВидЦены);
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДатаСеанса());

	
	Запрос.Текст = "ВЫБРАТЬ
	                    |	Номенклатура.Ссылка КАК Ном1
	                    |ПОМЕСТИТЬ ВТ_СписокНоменклатуры
	                    |ИЗ
	                    |	Справочник.Номенклатура КАК Номенклатура
	                    |ГДЕ
	                    |	Номенклатура.ЭтоГруппа = ЛОЖЬ
	                    |	И ВЫБОР
	                    |			КОГДА &ВыбНом = ИСТИНА
	                    |				ТОГДА Номенклатура.Ссылка В ИЕРАРХИИ (&ВыбНоменклатура)
	                    |			ИНАЧЕ &ВыбНом = ЛОЖЬ
	                    |		КОНЕЦ
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	Номенклатура.Ссылка
	                    |
	                    |ИНДЕКСИРОВАТЬ ПО
	                    |	Ном1
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ
	                    |	ВТ_СписокНоменклатуры.Ном1 КАК Номенклатура,
	                    |	НАЧАЛОПЕРИОДА(ЦеныНоменклатуры25.Период, ДЕНЬ) КАК ДАТА,
	                    |	ЦеныНоменклатуры25.Цена КАК Цена,
	                    |	ЦеныНоменклатуры25.ВидЦены КАК ВидЦены
	                    |ПОМЕСТИТЬ ВТ_ВыборкаВсехВидовЦен
	                    |ИЗ
	                    |	ВТ_СписокНоменклатуры КАК ВТ_СписокНоменклатуры
	                    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры25 КАК ЦеныНоменклатуры25
	                    |		ПО ВТ_СписокНоменклатуры.Ном1 = ЦеныНоменклатуры25.Номенклатура
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	ВТ_СписокНоменклатуры.Ном1,
	                    |	НАЧАЛОПЕРИОДА(ЦеныНоменклатуры25.Период, ДЕНЬ),
	                    |	ЦеныНоменклатуры25.ВидЦены,
	                    |	ЦеныНоменклатуры25.Цена
	                    |
	                    |ИНДЕКСИРОВАТЬ ПО
	                    |	Номенклатура,
	                    |	ВидЦены
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ
	                    |	ВТ_ВыборкаВсехВидовЦен.Номенклатура КАК Номенклатура,
	                    |	ВТ_ВыборкаВсехВидовЦен.ДАТА КАК Дата,
	                    |	ВТ_ВыборкаВсехВидовЦен.Цена КАК Цена
	                   |ИЗ
	                    |	ВТ_ВыборкаВсехВидовЦен КАК ВТ_ВыборкаВсехВидовЦен
	                    |ГДЕ
	                    |	ВТ_ВыборкаВсехВидовЦен.ВидЦены = &ВидЦены
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	ВТ_ВыборкаВсехВидовЦен.Номенклатура,
	                    |	ВТ_ВыборкаВсехВидовЦен.ДАТА,
	                    |	ВТ_ВыборкаВсехВидовЦен.Цена
	                    |
	                    |ОБЪЕДИНИТЬ ВСЕ
	                    |
	                    |ВЫБРАТЬ
	                    |	ЦеныНоменклатуры25СрезПоследних.Номенклатура,
	                    |	НАЧАЛОПЕРИОДА(&ТекДата,ДЕНЬ),
	                    |	ЦеныНоменклатуры25СрезПоследних.Цена
	                    |ИЗ
	                    |	РегистрСведений.ЦеныНоменклатуры25.СрезПоследних(
	                    |			&ТекДата,
	                    |			Номенклатура В (ВЫБРАТЬ Ном1 ИЗ ВТ_СписокНоменклатуры)
	                    |				И ВидЦены = &ВидЦены) КАК ЦеныНоменклатуры25СрезПоследних
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	ЦеныНоменклатуры25СрезПоследних.Номенклатура,
	                    |	НАЧАЛОПЕРИОДА(ЦеныНоменклатуры25СрезПоследних.Период,ДЕНЬ),
	                    |	ЦеныНоменклатуры25СрезПоследних.Цена
	                    |
	                    |УПОРЯДОЧИТЬ ПО
	                    |	Дата";
		
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТЗ ИЗ Результат Цикл
		
		НоваяСтрока = ТаблицаРезультат.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
		
	КонецЦикла;
	
	Результат.Очистить();
	
	Возврат ТаблицаРезультат;
	
КонецФункции

Функция СведенияОВнешнейОбработке() Экспорт
	
    ПараметрыРегистрации = Новый Структура;
    ПараметрыРегистрации.Вставить("Вид", "ДополнительныйОтчет");
 
    ПараметрыРегистрации.Вставить("Наименование",   "Регистрация цены по виду");
    ПараметрыРегистрации.Вставить("Версия",         "2.0");
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
    ПараметрыРегистрации.Вставить("Информация",     "Регистрация цены по виду");
     
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    ДобавитьКоманду(ТаблицаКоманд, "РегистрацияЦеныПоВидуУТ",
                    "1", "ОткрытиеФормы", Истина,"");
                     
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
     
    Возврат ПараметрыРегистрации;
	
КонецФункции
 
Функция ПолучитьТаблицуКоманд()
	
    Команды = Новый ТаблицаЗначений;
    Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
    Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
     
    Возврат Команды;
    
КонецФункции
 
Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор,
                    Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
 
    НоваяКоманда = ТаблицаКоманд.Добавить();
    НоваяКоманда.Представление = Представление;
    НоваяКоманда.Идентификатор = Идентификатор;
    НоваяКоманда.Использование = Использование;
    НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
    НоваяКоманда.Модификатор = Модификатор;
    
КонецПроцедуры


#КонецОбласти












// Подключаем внешний отчет




